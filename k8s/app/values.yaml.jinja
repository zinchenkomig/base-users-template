# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: cr.yandex/crp14m9keoja3jtgii9e/zinchenkomig/base_users
  pullPolicy: Always
  # Override the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: yr-key
nameOverride: ""
fullnameOverride: {{ project_name ~ '_app' }}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "8000"

podLabels:
  appName: {{ project_name }}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

env:
  - name: {{ env_prefix }}_BUCKET
    value: svc-buck
  - name: {{ env_prefix }}_FRONTEND_URL
    value: https://{{domain}}
  - name: {{ env_prefix }}_IS_PROD
    value: "1"
  - name: {{ env_prefix }}_S3_ENDPOINT
    value: s3.{{ domain }}
  - name: {{env_prefix}}_DB_ADDRESS
    value: postgres-svc
  - name: {{ env_prefix }}_JAEGER_BACKEND
    value: jaeger-svc-collector:4317
  - name: {{env_prefix}}_DB_NAME
    value: svc-db
  - name: {{env_prefix}}_DB_USER
    value: service-user
  - name: {{env_prefix}}_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres-svc
        key: password

ingress:
  enabled: true
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: 
    - host: api.{{domain}}
      paths:
        - path: /
          serviceName: bu
          servicePort: 80
          pathType: ImplementationSpecific

  tls:
    - secretName: zinchenkomig-back-tls
      hosts:
        - api.{{domain}}
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and rÂ§emove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /ping
    port: 8000
readinessProbe:
  httpGet:
    path: /ping
    port: 8000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

